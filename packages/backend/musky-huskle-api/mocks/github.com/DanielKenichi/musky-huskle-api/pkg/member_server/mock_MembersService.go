// Code generated by mockery v2.43.2. DO NOT EDIT.

package member

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	models "github.com/DanielKenichi/musky-huskle-api/pkg/models"
)

// MockMembersService is an autogenerated mock type for the MembersService type
type MockMembersService struct {
	mock.Mock
}

type MockMembersService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockMembersService) EXPECT() *MockMembersService_Expecter {
	return &MockMembersService_Expecter{mock: &_m.Mock}
}

// CreateMember provides a mock function with given fields: _a0
func (_m *MockMembersService) CreateMember(_a0 *models.Member) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for CreateMember")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Member) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockMembersService_CreateMember_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateMember'
type MockMembersService_CreateMember_Call struct {
	*mock.Call
}

// CreateMember is a helper method to define mock.On call
//   - _a0 *models.Member
func (_e *MockMembersService_Expecter) CreateMember(_a0 interface{}) *MockMembersService_CreateMember_Call {
	return &MockMembersService_CreateMember_Call{Call: _e.mock.On("CreateMember", _a0)}
}

func (_c *MockMembersService_CreateMember_Call) Run(run func(_a0 *models.Member)) *MockMembersService_CreateMember_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*models.Member))
	})
	return _c
}

func (_c *MockMembersService_CreateMember_Call) Return(_a0 error) *MockMembersService_CreateMember_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockMembersService_CreateMember_Call) RunAndReturn(run func(*models.Member) error) *MockMembersService_CreateMember_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteMember provides a mock function with given fields: _a0
func (_m *MockMembersService) DeleteMember(_a0 *models.Member) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for DeleteMember")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Member) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockMembersService_DeleteMember_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteMember'
type MockMembersService_DeleteMember_Call struct {
	*mock.Call
}

// DeleteMember is a helper method to define mock.On call
//   - _a0 *models.Member
func (_e *MockMembersService_Expecter) DeleteMember(_a0 interface{}) *MockMembersService_DeleteMember_Call {
	return &MockMembersService_DeleteMember_Call{Call: _e.mock.On("DeleteMember", _a0)}
}

func (_c *MockMembersService_DeleteMember_Call) Run(run func(_a0 *models.Member)) *MockMembersService_DeleteMember_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*models.Member))
	})
	return _c
}

func (_c *MockMembersService_DeleteMember_Call) Return(_a0 error) *MockMembersService_DeleteMember_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockMembersService_DeleteMember_Call) RunAndReturn(run func(*models.Member) error) *MockMembersService_DeleteMember_Call {
	_c.Call.Return(run)
	return _c
}

// GetMembers provides a mock function with given fields: membersName
func (_m *MockMembersService) GetMembers(membersName []string) ([]models.Member, error) {
	ret := _m.Called(membersName)

	if len(ret) == 0 {
		panic("no return value specified for GetMembers")
	}

	var r0 []models.Member
	var r1 error
	if rf, ok := ret.Get(0).(func([]string) ([]models.Member, error)); ok {
		return rf(membersName)
	}
	if rf, ok := ret.Get(0).(func([]string) []models.Member); ok {
		r0 = rf(membersName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Member)
		}
	}

	if rf, ok := ret.Get(1).(func([]string) error); ok {
		r1 = rf(membersName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockMembersService_GetMembers_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetMembers'
type MockMembersService_GetMembers_Call struct {
	*mock.Call
}

// GetMembers is a helper method to define mock.On call
//   - membersName []string
func (_e *MockMembersService_Expecter) GetMembers(membersName interface{}) *MockMembersService_GetMembers_Call {
	return &MockMembersService_GetMembers_Call{Call: _e.mock.On("GetMembers", membersName)}
}

func (_c *MockMembersService_GetMembers_Call) Run(run func(membersName []string)) *MockMembersService_GetMembers_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]string))
	})
	return _c
}

func (_c *MockMembersService_GetMembers_Call) Return(_a0 []models.Member, _a1 error) *MockMembersService_GetMembers_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockMembersService_GetMembers_Call) RunAndReturn(run func([]string) ([]models.Member, error)) *MockMembersService_GetMembers_Call {
	_c.Call.Return(run)
	return _c
}

// MemberPicker provides a mock function with given fields: ctx
func (_m *MockMembersService) MemberPicker(ctx context.Context) {
	_m.Called(ctx)
}

// MockMembersService_MemberPicker_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'MemberPicker'
type MockMembersService_MemberPicker_Call struct {
	*mock.Call
}

// MemberPicker is a helper method to define mock.On call
//   - ctx context.Context
func (_e *MockMembersService_Expecter) MemberPicker(ctx interface{}) *MockMembersService_MemberPicker_Call {
	return &MockMembersService_MemberPicker_Call{Call: _e.mock.On("MemberPicker", ctx)}
}

func (_c *MockMembersService_MemberPicker_Call) Run(run func(ctx context.Context)) *MockMembersService_MemberPicker_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *MockMembersService_MemberPicker_Call) Return() *MockMembersService_MemberPicker_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMembersService_MemberPicker_Call) RunAndReturn(run func(context.Context)) *MockMembersService_MemberPicker_Call {
	_c.Call.Return(run)
	return _c
}

// PickTimer provides a mock function with given fields: ctx
func (_m *MockMembersService) PickTimer(ctx context.Context) {
	_m.Called(ctx)
}

// MockMembersService_PickTimer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PickTimer'
type MockMembersService_PickTimer_Call struct {
	*mock.Call
}

// PickTimer is a helper method to define mock.On call
//   - ctx context.Context
func (_e *MockMembersService_Expecter) PickTimer(ctx interface{}) *MockMembersService_PickTimer_Call {
	return &MockMembersService_PickTimer_Call{Call: _e.mock.On("PickTimer", ctx)}
}

func (_c *MockMembersService_PickTimer_Call) Run(run func(ctx context.Context)) *MockMembersService_PickTimer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *MockMembersService_PickTimer_Call) Return() *MockMembersService_PickTimer_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMembersService_PickTimer_Call) RunAndReturn(run func(context.Context)) *MockMembersService_PickTimer_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateMember provides a mock function with given fields: _a0
func (_m *MockMembersService) UpdateMember(_a0 *models.Member) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for UpdateMember")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Member) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockMembersService_UpdateMember_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateMember'
type MockMembersService_UpdateMember_Call struct {
	*mock.Call
}

// UpdateMember is a helper method to define mock.On call
//   - _a0 *models.Member
func (_e *MockMembersService_Expecter) UpdateMember(_a0 interface{}) *MockMembersService_UpdateMember_Call {
	return &MockMembersService_UpdateMember_Call{Call: _e.mock.On("UpdateMember", _a0)}
}

func (_c *MockMembersService_UpdateMember_Call) Run(run func(_a0 *models.Member)) *MockMembersService_UpdateMember_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*models.Member))
	})
	return _c
}

func (_c *MockMembersService_UpdateMember_Call) Return(_a0 error) *MockMembersService_UpdateMember_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockMembersService_UpdateMember_Call) RunAndReturn(run func(*models.Member) error) *MockMembersService_UpdateMember_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockMembersService creates a new instance of MockMembersService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMembersService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMembersService {
	mock := &MockMembersService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
